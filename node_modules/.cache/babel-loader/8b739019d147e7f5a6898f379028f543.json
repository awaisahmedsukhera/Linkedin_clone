{"ast":null,"code":"var _jsxFileName = \"G:\\\\DevNation\\\\react\\\\linkedin_clone\\\\src\\\\components\\\\Feeds.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport FeedsInputs from './FeedsInputs';\nimport FeedPosts from \"./FeedPosts\";\nimport { db } from \"../server/firestore\";\nimport \"../assets/styles/Feeds.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Feeds = () => {\n  _s();\n\n  const [Posts, setPosts] = useState([]);\n  useEffect(() => {\n    db.collection(\"posts\").get().then(result => result.docs).then(docs => docs.map(doc => ({\n      Avatar: doc.data().Avatar,\n      Description: doc.data().Description,\n      Message: doc.data().Message,\n      Name: doc.data().Name\n    }))).then(posts => setPosts(posts)).catch(err => console.log(err));\n  }, []);\n  useEffect(() => {\n    console.log(Posts);\n  }, [Posts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedscontainer\",\n    children: [/*#__PURE__*/_jsxDEV(FeedsInputs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this), Posts && Posts.map(post => /*#__PURE__*/_jsxDEV(FeedPosts, {\n      Avatar: post.Avatar,\n      Description: post.Description,\n      Message: post.Message,\n      Name: post.Name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Feeds, \"tNgBHXV7A1SRmOjCo6j5rHmMWmw=\");\n\n_c = Feeds;\nexport default Feeds;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feeds\");","map":{"version":3,"sources":["G:/DevNation/react/linkedin_clone/src/components/Feeds.js"],"names":["React","useEffect","useState","FeedsInputs","FeedPosts","db","Feeds","Posts","setPosts","collection","get","then","result","docs","map","doc","Avatar","data","Description","Message","Name","posts","catch","err","console","log","post"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,EAAT,QAAmB,qBAAnB;AACA,OAAO,4BAAP;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAmBN,QAAQ,CAAC,EAAD,CAAjC;AACAD,EAAAA,SAAS,CAAC,MAAI;AACbI,IAAAA,EAAE,CAACI,UAAH,CAAc,OAAd,EAAuBC,GAAvB,GACCC,IADD,CACOC,MAAD,IAAWA,MAAM,CAACC,IADxB,EAECF,IAFD,CAEOE,IAAD,IACJA,IAAI,CAACC,GAAL,CAAUC,GAAD,KAAQ;AAClBC,MAAAA,MAAM,EAAED,GAAG,CAACE,IAAJ,GAAWD,MADD;AAElBE,MAAAA,WAAW,EAAEH,GAAG,CAACE,IAAJ,GAAWC,WAFN;AAGlBC,MAAAA,OAAO,EAAEJ,GAAG,CAACE,IAAJ,GAAWE,OAHF;AAIlBC,MAAAA,IAAI,EAAEL,GAAG,CAACE,IAAJ,GAAWG;AAJC,KAAR,CAAT,CAHF,EAUCT,IAVD,CAUOU,KAAD,IAAUb,QAAQ,CAACa,KAAD,CAVxB,EAWCC,KAXD,CAWQC,GAAD,IAAOC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXd;AAYA,GAbQ,EAaP,EAbO,CAAT;AAeAtB,EAAAA,SAAS,CAAC,MAAI;AACbuB,IAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAZ;AACA,GAFQ,EAEP,CAACA,KAAD,CAFO,CAAT;AAIA,sBACC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADD,EAEEA,KAAK,IACNA,KAAK,CAACO,GAAN,CAAWY,IAAD,iBACT,QAAC,SAAD;AACA,MAAA,MAAM,EAAEA,IAAI,CAACV,MADb;AAEA,MAAA,WAAW,EAAEU,IAAI,CAACR,WAFlB;AAGA,MAAA,OAAO,EAAEQ,IAAI,CAACP,OAHd;AAIA,MAAA,IAAI,EAAEO,IAAI,CAACN;AAJX;AAAA;AAAA;AAAA;AAAA,YADD,CAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAcA,CAnCD;;GAAMd,K;;KAAAA,K;AAqCN,eAAeA,KAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport FeedsInputs from './FeedsInputs';\r\nimport FeedPosts from \"./FeedPosts\";\r\nimport { db } from \"../server/firestore\";\r\nimport \"../assets/styles/Feeds.css\"\r\n\r\n\r\nconst Feeds = () => {\r\n\tconst [Posts, setPosts]= useState([]);\r\n\tuseEffect(()=>{\r\n\t\tdb.collection(\"posts\").get()\r\n\t\t.then((result)=> result.docs)\r\n\t\t.then((docs)=>\r\n\t\t  docs.map((doc)=>({\r\n\t\t\tAvatar: doc.data().Avatar,\r\n\t\t\tDescription: doc.data().Description,\r\n\t\t\tMessage: doc.data().Message,\r\n\t\t\tName: doc.data().Name,\r\n\t\t}))\r\n\t\t)\r\n\t\t.then((posts)=> setPosts(posts))\r\n\t\t.catch((err)=>console.log(err));\r\n\t},[]);\r\n\r\n\tuseEffect(()=>{\r\n\t\tconsole.log(Posts);\r\n\t},[Posts]);\r\n\r\n\treturn (\r\n\t\t<div className='feedscontainer'>\r\n\t\t\t<FeedsInputs/>\r\n\t\t\t{Posts &&\r\n\t\t\tPosts.map((post)=>(\r\n\t\t\t\t<FeedPosts\r\n\t\t\t\tAvatar={post.Avatar}\r\n\t\t\t\tDescription={post.Description}\r\n\t\t\t\tMessage={post.Message}\r\n\t\t\t\tName={post.Name}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Feeds"]},"metadata":{},"sourceType":"module"}